/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

/**
 *
 * @author diego
 */
public class DialogBox extends javax.swing.JFrame {

    //JTextField user = new JTextField();
    //JPasswordField pass = new JPasswordField(10);
    String[] options = new String[]{"OK", "Cancelar"};
    JPanel panel = new JPanel(new GridBagLayout());
    //JLabel label = new JLabel();
    Component component;

    /**
     * Creates new form DialogBox
     *
     * @param component
     */
    public DialogBox(Component component) {
        this.component = component;
        initComponents();
        this.setAlwaysOnTop(true);
    }

    public void showDialogBox(String infoMessage, String titleBar) {
        JOptionPane.showMessageDialog(component, infoMessage, titleBar, JOptionPane.INFORMATION_MESSAGE);
    }

    public boolean showConfirmationDialogBox(String infoMessage, String titleBar, int type) {
        return JOptionPane.showConfirmDialog(component, infoMessage, titleBar, type) == 0;
    }

    public String showDialogBoxPassword(String titleBar) {
        panel.removeAll();

        JLabel l = new JLabel("Usu√°rio:");
        l.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        panel.add(l, createGbc(0, 1));

        JTextField user = new JTextField(15);
        user.setPreferredSize(new Dimension(60, 30));
        panel.add(user, createGbc(1, 1));

        l = new JLabel("Senha:");
        l.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        panel.add(l, createGbc(0, 2));

        JPasswordField pass = new JPasswordField(15);
        pass.setPreferredSize(new Dimension(60, 30));
        panel.add(pass, createGbc(1, 2));

        Integer option = JOptionPane.showOptionDialog(component, panel, titleBar,
                JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE,
                null, options, options[0]);
        return option.toString() + "%" + user.getText() + "%" + String.valueOf(pass.getPassword());
    }

    public String showInputDialogBox(String titleBar, String InputName) {
        panel.removeAll();

        JLabel l = new JLabel(InputName);
        l.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        panel.add(l, createGbc(1, 1));

        JTextField entry = new JTextField(15);
        entry.setPreferredSize(new Dimension(100, 30));
        panel.add(entry, createGbc(1, 2));

        Integer option = JOptionPane.showOptionDialog(component, panel, titleBar,
                JOptionPane.NO_OPTION, JOptionPane.PLAIN_MESSAGE,
                null, options, options[0]);

        if (option != 0) {
            return null;
        }
        return entry.getText();
    }

    public void showAlertMessage(String message, String titleBar, Color backGroundColor, Color foreGroundColor) {
        panel.removeAll();
        panel.setBackground(backGroundColor);

        JLabel l = new JLabel(message);
        l.setFont(new Font("Tahoma", 1, 16)); // NOI18N
        l.setForeground(foreGroundColor);

        panel.add(l, createGbc(1, 1));
        JOptionPane.showMessageDialog(component, panel, titleBar, JOptionPane.WARNING_MESSAGE, null);
    }

    private GridBagConstraints createGbc(int x, int y) {
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.gridx = x;
        gbc.gridy = y;
        gbc.fill = GridBagConstraints.HORIZONTAL; // stretch components horizontally
        gbc.weightx = 1.0;
        gbc.weighty = 0.0; // increase if you want component location to stretch vert.

        // I_GAP is a constant and is the size of the gap around
        // each component
        gbc.insets = new Insets(2, 2, 2, 2);

        // if the x value is odd, anchor to the left, otherwise if even to the right
        gbc.anchor = x % 2 == 0 ? GridBagConstraints.WEST : GridBagConstraints.EAST;
        return gbc;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 611, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 459, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new DialogBox(null).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
